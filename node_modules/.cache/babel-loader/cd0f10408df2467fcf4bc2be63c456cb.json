{"ast":null,"code":"import { callCreateTeacherApi, callUpdateTeacherApi, updateTeacher, callTeacherListApi, callCreateApi, callListApi, callupdateApi, callDeleteApi, callgetTeacherApi, callUploadApi } from \"./service\";\nexport const COURSE_DETAILS = 'COURSE_DETAILS';\nexport const COURSE_LIST = 'COURSE_LIST';\nexport function getTeacherList(page, limit) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return callTeacherListApi(page, limit, response => {\n        if (response.status) {\n          dispatch(saveTeacherList(response.result.data.docs));\n          resolve(response);\n          return;\n        } else {\n          reject(response);\n          return;\n        }\n      });\n    });\n  };\n}\nexport function getTeacher(id) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return callgetTeacherApi(id, response => {\n        if (response.status) {\n          dispatch(saveTeacher(response.result.data));\n          resolve(response);\n          return;\n        } else {\n          reject(response);\n          return;\n        }\n      });\n    });\n  };\n}\nexport function createCourse(body) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return callCreateTeacherApi(body, response => {\n        if (response.status) {\n          dispatch(saveTeacher(response.result.data));\n          resolve(response);\n          return;\n        } else {\n          reject(response);\n          return;\n        }\n      });\n    });\n  };\n}\nexport function updateCourse(body, id) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return callUpdateTeacherApi(body, id, response => {\n        if (response.status) {\n          dispatch(saveTeacher(response.result.data));\n          resolve(response);\n          return;\n        } else {\n          reject(response);\n          return;\n        }\n      });\n    });\n  };\n}\nexport function getList(path) {\n  return new Promise((resolve, reject) => {\n    return callListApi(path, 0, 100, response => {\n      if (response.status) {\n        resolve(response.result.data.docs);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function createData(path, payload) {\n  return new Promise((resolve, reject) => {\n    return callCreateApi(path, payload, response => {\n      if (response.status) {\n        resolve(response.result.data);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function updateChapter(id, payload) {\n  return new Promise((resolve, reject) => {\n    return callupdateApi(`chapters/${id}`, payload, response => {\n      if (response.status) {\n        resolve(response.result.data);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function deleteChapter(id) {\n  return new Promise((resolve, reject) => {\n    return callDeleteApi(`chapters/${id}`, response => {\n      if (response.status) {\n        resolve(response.result.data);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function deleteTeacher(id) {\n  return new Promise((resolve, reject) => {\n    return callDeleteApi(`courses/${id}`, response => {\n      if (response.status) {\n        resolve(response.result.data);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function deleteDates(id) {\n  return new Promise((resolve, reject) => {\n    return callDeleteApi(`impdates/${id}`, response => {\n      if (response.status) {\n        resolve(response.result.data);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function saveThumb(file, obj) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      const data = new FormData();\n      data.append('thumbnail', file);\n      return callUploadApi(`courses/uploadCourseThumbnail/${obj._id}`, data, response => {\n        if (response.status) {\n          obj['thumbnail'] = response.result.data;\n          dispatch(saveTeacher(obj));\n          resolve(response.result.data);\n        } else {\n          reject(response);\n        }\n      });\n    });\n  };\n}\nexport function saveResourceFile(file, id) {\n  return new Promise((resolve, reject) => {\n    const data = new FormData();\n    data.append('chapterdoc', file);\n    return callUploadApi(`chapters/uploadChapterDoc/${id}`, data, response => {\n      if (response.status) {\n        resolve(response.result.data);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function saveChapterImgFile(file, id) {\n  return new Promise((resolve, reject) => {\n    const data = new FormData();\n    data.append('chapterimg', file);\n    return callUploadApi(`chapters/uploadChapterImage/${id}`, data, response => {\n      if (response.status) {\n        resolve(response.result.data);\n      } else {\n        reject(response);\n      }\n    });\n  });\n}\nexport function saveTeacher(data) {\n  return {\n    type: COURSE_DETAILS,\n    data: data\n  };\n}\nexport function saveTeacherList(data) {\n  return {\n    type: COURSE_LIST,\n    data: data\n  };\n}","map":{"version":3,"sources":["D:/eduexcellence-dev/src/containers/admin/teacher/actions.js"],"names":["callCreateTeacherApi","callUpdateTeacherApi","updateTeacher","callTeacherListApi","callCreateApi","callListApi","callupdateApi","callDeleteApi","callgetTeacherApi","callUploadApi","COURSE_DETAILS","COURSE_LIST","getTeacherList","page","limit","dispatch","Promise","resolve","reject","response","status","saveTeacherList","result","data","docs","getTeacher","id","saveTeacher","createCourse","body","updateCourse","getList","path","createData","payload","updateChapter","deleteChapter","deleteTeacher","deleteDates","saveThumb","file","obj","FormData","append","_id","saveResourceFile","saveChapterImgFile","type"],"mappings":"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","sourcesContent":["import {\r\n    callCreateTeacherApi, callUpdateTeacherApi, updateTeacher, callTeacherListApi,\r\n    callCreateApi, callListApi, callupdateApi, callDeleteApi,\r\n    callgetTeacherApi, callUploadApi\r\n} from \"./service\";\r\n\r\nexport const COURSE_DETAILS = 'COURSE_DETAILS';\r\nexport const COURSE_LIST = 'COURSE_LIST';\r\n\r\nexport function getTeacherList(page, limit) {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            return callTeacherListApi(page, limit, (response) => {\r\n                if (response.status) {\r\n                    dispatch(saveTeacherList(response.result.data.docs))\r\n                    resolve(response)\r\n                    return;\r\n                } else {\r\n                    reject(response)\r\n                    return;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport function getTeacher(id) {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            return callgetTeacherApi(id, (response) => {\r\n                if (response.status) {\r\n                    dispatch(saveTeacher(response.result.data))\r\n                    resolve(response)\r\n                    return;\r\n                } else {\r\n                    reject(response)\r\n                    return;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport function createCourse(body) {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            return callCreateTeacherApi(body, (response) => {\r\n                if (response.status) {\r\n                    dispatch(saveTeacher(response.result.data))\r\n                    resolve(response)\r\n                    return;\r\n                } else {\r\n                    reject(response)\r\n                    return;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport function updateCourse(body, id) {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            return callUpdateTeacherApi(body, id, (response) => {\r\n                if (response.status) {\r\n                    dispatch(saveTeacher(response.result.data))\r\n                    resolve(response)\r\n                    return;\r\n                } else {\r\n                    reject(response)\r\n                    return;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport function getList(path) {\r\n    return new Promise((resolve, reject) => {\r\n        return callListApi(path, 0, 100, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data.docs)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function createData(path, payload) {\r\n    return new Promise((resolve, reject) => {\r\n        return callCreateApi(path, payload, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function updateChapter(id, payload) {\r\n    return new Promise((resolve, reject) => {\r\n        return callupdateApi(`chapters/${id}`, payload, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function deleteChapter(id) {\r\n    return new Promise((resolve, reject) => {\r\n        return callDeleteApi(`chapters/${id}`, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function deleteTeacher(id) {\r\n    return new Promise((resolve, reject) => {\r\n        return callDeleteApi(`courses/${id}`, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function deleteDates(id) {\r\n    return new Promise((resolve, reject) => {\r\n        return callDeleteApi(`impdates/${id}`, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function saveThumb(file, obj) {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            const data = new FormData()\r\n            data.append('thumbnail', file)\r\n            return callUploadApi(`courses/uploadCourseThumbnail/${obj._id}`, data, (response) => {\r\n                if (response.status) {\r\n                    obj['thumbnail'] = response.result.data;\r\n                    dispatch(saveTeacher(obj))\r\n                    resolve(response.result.data)\r\n                } else {\r\n                    reject(response)\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport function saveResourceFile(file, id) {\r\n    return new Promise((resolve, reject) => {\r\n        const data = new FormData()\r\n        data.append('chapterdoc', file)\r\n        return callUploadApi(`chapters/uploadChapterDoc/${id}`, data, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function saveChapterImgFile(file, id) {\r\n    return new Promise((resolve, reject) => {\r\n        const data = new FormData()\r\n        data.append('chapterimg', file)\r\n        return callUploadApi(`chapters/uploadChapterImage/${id}`, data, (response) => {\r\n            if (response.status) {\r\n                resolve(response.result.data)\r\n            } else {\r\n                reject(response)\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nexport function saveTeacher(data) {\r\n    return {\r\n        type: COURSE_DETAILS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport function saveTeacherList(data) {\r\n    return {\r\n        type: COURSE_LIST,\r\n        data: data\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}