{"ast":null,"code":"export const API_URL = 'http://localhost:7000'; // export const API_URL = \"https://devglserver.instavc.com\";\n// export const API_URL = \"https://testglserver.instavc.com\";\n\nfunction Utils() {\n  this.httpRequest = (endpoint, method, data, cb) => {\n    let xmlhttp;\n    let token = localStorage.getItem(\"userAuthToken\"); // const host = process.env.API_URL;\n\n    const host = API_URL;\n    var url = host + \"/api/\" + endpoint;\n\n    if (window.XMLHttpRequest) {\n      // code for IE7+, Firefox, Chrome, Opera, Safari\n      xmlhttp = new XMLHttpRequest();\n    }\n\n    if (xmlhttp) {\n      xmlhttp.open(method, url, true);\n      xmlhttp.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n\n      xmlhttp.onreadystatechange = function () {\n        if (xmlhttp.readyState === 4) {\n          if (xmlhttp.status !== 0) {\n            if (xmlhttp.response !== \"\") {\n              let response = JSON.parse(xmlhttp.response); // Incase of user de-activation (when user is loggedin)\n\n              if (!response.status && (response.result && response.result.message === \"In Active User\" || response.result && response.result.message === \"Invalid Token\")) {\n                localStorage.clear();\n                window.location.href = window.location.origin;\n              }\n\n              cb && cb(response);\n            }\n          } else {\n            let response = {\n              status: false,\n              result: {\n                message: \"Connection Refused\"\n              }\n            };\n            cb && cb(response);\n          }\n        }\n      }; // xmlhttp.timeout = 10000;\n      // xmlhttp.ontimeout = function (e) {\n      //   var response = { status: false, result: { message: \"Connection Timeout\" } }\n      //   cb && cb(response);\n      //   // XMLHttpRequest timed out. Do something here.\n      // };\n\n\n      xmlhttp.setRequestHeader(\"x-access-token\", token || \"\");\n      xmlhttp.send(JSON.stringify(data));\n    }\n  };\n\n  this.httpMultiPartRequest = (endpoint, data, cb) => {\n    let xmlhttp;\n    let token = localStorage.getItem(\"userAuthToken\"); // const host = process.env.API_URL;\n\n    const host = API_URL;\n    var url = host + \"/api/\" + endpoint;\n\n    if (window.XMLHttpRequest) {\n      // code for IE7+, Firefox, Chrome, Opera, Safari\n      xmlhttp = new XMLHttpRequest();\n    } // else {\n    //     // code for IE6, IE5\n    //     xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    // }\n\n\n    if (xmlhttp) {\n      xmlhttp.open(\"post\", url, true);\n\n      xmlhttp.onreadystatechange = function () {\n        if (xmlhttp.readyState === 4) {\n          if (xmlhttp.status !== 0) {\n            if (xmlhttp.response !== \"\") {\n              let response = JSON.parse(xmlhttp.response);\n              cb && cb(response);\n            }\n          } else {\n            let response = {\n              status: false,\n              result: {\n                message: \"Connection Refused\"\n              }\n            };\n            cb && cb(response);\n          }\n        }\n      };\n\n      xmlhttp.setRequestHeader(\"x-access-token\", token || \"\"); // const formData = new FormData();\n      // formData.append('productmedia', data);\n\n      xmlhttp.send(data);\n    }\n  };\n\n  this.getLocalStorage = () => {\n    try {\n      return localStorage.getItem(\"userAuthToken\");\n    } catch (e) {\n      // console.log(e.message);\n      return \"undefined\";\n    }\n  };\n}\n\nvar utils = new Utils();\nexport default utils;","map":{"version":3,"sources":["D:/eduexcellence-dev/src/utils/apiCaller.js"],"names":["API_URL","Utils","httpRequest","endpoint","method","data","cb","xmlhttp","token","localStorage","getItem","host","url","window","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","response","JSON","parse","result","message","clear","location","href","origin","send","stringify","httpMultiPartRequest","getLocalStorage","e","utils"],"mappings":"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","sourcesContent":["\r\nexport const API_URL = 'http://localhost:7000';\r\n// export const API_URL = \"https://devglserver.instavc.com\";\r\n// export const API_URL = \"https://testglserver.instavc.com\";\r\n\r\n\r\n\r\nfunction Utils() {\r\n\r\n    this.httpRequest = (endpoint, method, data, cb) => {\r\n        let xmlhttp;\r\n        let token = localStorage.getItem(\"userAuthToken\");\r\n\r\n        // const host = process.env.API_URL;\r\n        const host = API_URL;\r\n        var url = host + \"/api/\" + endpoint;\r\n\r\n        if (window.XMLHttpRequest) {\r\n            // code for IE7+, Firefox, Chrome, Opera, Safari\r\n            xmlhttp = new XMLHttpRequest();\r\n        }\r\n\r\n        if (xmlhttp) {\r\n            xmlhttp.open(method, url, true);\r\n            xmlhttp.setRequestHeader(\r\n                \"Content-type\",\r\n                \"application/json; charset=utf-8\"\r\n            );\r\n            xmlhttp.onreadystatechange = function () {\r\n                if (xmlhttp.readyState === 4) {\r\n                    if (xmlhttp.status !== 0) {\r\n                        if (xmlhttp.response !== \"\") {\r\n                            let response = JSON.parse(xmlhttp.response);\r\n\r\n                            // Incase of user de-activation (when user is loggedin)\r\n                            if (!response.status &&\r\n                                ((response.result && response.result.message === \"In Active User\") ||\r\n                                (response.result &&  response.result.message === \"Invalid Token\"))\r\n                            ) {\r\n                                localStorage.clear();\r\n                                window.location.href = window.location.origin;\r\n                            }\r\n                            cb && cb(response);\r\n                        }\r\n                    } else {\r\n                        let response = {\r\n                            status: false,\r\n                            result: { message: \"Connection Refused\" }\r\n                        };\r\n                        cb && cb(response);\r\n                    }\r\n                }\r\n            };\r\n            // xmlhttp.timeout = 10000;\r\n            // xmlhttp.ontimeout = function (e) {\r\n            //   var response = { status: false, result: { message: \"Connection Timeout\" } }\r\n            //   cb && cb(response);\r\n            //   // XMLHttpRequest timed out. Do something here.\r\n            // };\r\n            xmlhttp.setRequestHeader(\"x-access-token\", token || \"\");\r\n            xmlhttp.send(JSON.stringify(data));\r\n        }\r\n    }\r\n\r\n    this.httpMultiPartRequest = (endpoint, data, cb) => {\r\n        let xmlhttp;\r\n        let token = localStorage.getItem(\"userAuthToken\");\r\n        // const host = process.env.API_URL;\r\n        const host = API_URL;\r\n        var url = host + \"/api/\" + endpoint;\r\n        if (window.XMLHttpRequest) {\r\n            // code for IE7+, Firefox, Chrome, Opera, Safari\r\n            xmlhttp = new XMLHttpRequest();\r\n        } \r\n        // else {\r\n        //     // code for IE6, IE5\r\n        //     xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        // }\r\n        if (xmlhttp) {\r\n            xmlhttp.open(\"post\", url, true);\r\n            xmlhttp.onreadystatechange = function () {\r\n                if (xmlhttp.readyState === 4) {\r\n                    if (xmlhttp.status !== 0) {\r\n                        if (xmlhttp.response !== \"\") {\r\n                            let response = JSON.parse(xmlhttp.response);\r\n                            cb && cb(response);\r\n                        }\r\n                    } else {\r\n                        let response = {\r\n                            status: false,\r\n                            result: {\r\n                                message: \"Connection Refused\"\r\n                            }\r\n                        };\r\n                        cb && cb(response);\r\n                    }\r\n                }\r\n            };\r\n            xmlhttp.setRequestHeader(\"x-access-token\", token || \"\");\r\n            // const formData = new FormData();\r\n            // formData.append('productmedia', data);\r\n            xmlhttp.send(data);\r\n        }\r\n    }\r\n\r\n    this.getLocalStorage = () => {\r\n        try {\r\n            return localStorage.getItem(\"userAuthToken\");\r\n        } catch (e) {\r\n            // console.log(e.message);\r\n            return \"undefined\";\r\n        }\r\n    }\r\n}\r\n\r\nvar utils = new Utils();\r\nexport default utils;\r\n"]},"metadata":{},"sourceType":"module"}